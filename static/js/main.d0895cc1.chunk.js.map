{"version":3,"sources":["components/info.js","components/form.js","components/Station.js","components/moreinfo.js","App.js","serviceWorker.js","index.js"],"names":["Info","react_default","a","createElement","className","href","Form","props","onSubmit","stationMethod","type","name","placeholder","Station","latitude","longitude","station_code","error","MoreInfo","API_ID","API_KEY","App","state","undefined","gettingStation","_callee","e","station","api_url","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","_this","setState","member","stop","info","moreinfo","components_form","this","components_Station","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0895cc1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Info = () => (\n\t<div className=\"col-12 info_text\">\n\t\t<div className=\"logo\">\n\t\t\t<a href=\"#\" className=\"logo_t\">WM</a>\n\t\t</div>\n\t\t<h2><span>Transport</span> application</h2>\n\t\t<p>This application finds the location of the train stop in the city of London.<br/>\n\t\t\tThe application was created by <span>Vladislav Mikhasyov</span> for the company <span>WM Reply</span>.\n\t\t</p>\n\t\t<button className=\"button button--ujarak button--border-thin button--text-thick\">Lets go</button>\n\t</div>\n);\nexport default Info;","import React from \"react\";\n\nconst Form = props => (\n\t\t<form onSubmit={props.stationMethod}>\n\t\t\t<div className=\"form_h4\">\n\t\t\t<h4>Let`s go</h4>\n\t\t\t</div>\n\t\t\t<div className=\"form_input\">\n\t\t\t<input type=\"text\" name=\"station\" placeholder=\"Station\"/>\n\t\t\t<button>Get stop info</button>\n\t\t\t</div>\n\t\t</form>\n);\n\nexport default Form;","import React from \"react\";\n\nconst Station = props => (\n\t<div className=\"infoStation\">\n\t\t{props.name &&\n\t\t<div>\n\t\t\t<p>Station name: {props.name}</p>\n\t\t\t<p>Latitude: {props.latitude}</p>\n\t\t\t<p>Longitude: {props.longitude}</p>\n\t\t\t<p>Station Code: {props.station_code}</p>\n\t\t</div>\n\t\t}\n\t\t<p className=\"error\">{ props.error }</p>\n\t</div>\n);\n\nexport default Station;","import React from \"react\";\n\nconst MoreInfo = () => (\n\t<div className=\"col-12 moreinfo_text\">\n\t\t<div className=\"col-12\">\n\t\t\t<h3>Accuracy</h3>\n\t\t\t<p>\n\t\t\t\tThe app “Train stops” has the ability to find out the exact location of the stop entered by the user. <br/>\n\t\t\t\tThe input parameter is the name of any stop. <br/>\n\t\t\t\tImprint - <br/>\n\t\t\t\t1) The full name of the train stop <br/>\n\t\t\t\t2) Exact stop coordinates <br/>\n\t\t\t\t3) Stop ID <br/>\n\t\t\t\tThis application can and should be scaled. <br/>\n\t\t\t</p>\n\t\t</div>\n\t</div>\n);\nexport default MoreInfo;","import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Station from \"./components/Station\";\nimport MoreInfo from \"./components/moreinfo\";\n\nconst API_ID = \"590700fc\";\nconst API_KEY = \"1ba91f927ac511bff67d85173bac72f8\";\n\nclass App extends React.Component{\n\n\tstate = {\n\t\tname: undefined,\n\t\tlatitude: undefined,\n\t\tlongitude: undefined,\n\t\tstation_code: undefined,\n\t\terror: undefined\n\t};\n\n\tgettingStation = async (e) => {\n\n\t\te.preventDefault();\n\t\tlet station = e.target.elements.station.value;\n\n\t\tif (station){\n\n\t\t\tconst api_url = await fetch(`http://transportapi.com/v3/uk/places.json?query=${station}&type=train_station&app_id=${API_ID}&app_key=${API_KEY}`);\n\t\t\tconst data = await api_url.json();\n\n\t\t\tthis.setState({\n\t\t\t\tname: data.member[0].name,\n\t\t\t\tlatitude: data.member[0].latitude,\n\t\t\t\tlongitude: data.member[0].longitude,\n\t\t\t\tstation_code: data.member[0].station_code,\n\t\t\t\terror: undefined\n\t\t\t});\n\t} else {\n\t\t\tthis.setState({\n\t\t\t\tname: undefined,\n\t\t\t\tlatitude: undefined,\n\t\t\t\tlongitude: undefined,\n\t\t\t\tstation_code: undefined,\n\t\t\t\terror: \"Enter station name\"\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"wrapper\">\n\n\t\t\t\t<div className=\"info\">\n\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t<div className=\"row no-gutters\">\n\t\t\t\t\t\t\t\t<Info />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"moreinfo\">\n\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t<div className=\"row no-gutters\">\n\t\t\t\t\t\t\t<MoreInfo />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form\">\n\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t<div className=\"row no-gutters\">\n\t\t\t\t\t\t\t<Form stationMethod={this.gettingStation}/>\n\t\t\t\t\t\t\t<Station\n\t\t\t\t\t\t\t\tname = {this.state.name}\n\t\t\t\t\t\t\t\tlatitude = {this.state.latitude}\n\t\t\t\t\t\t\t\tlongitude = {this.state.longitude}\n\t\t\t\t\t\t\t\tstation_code = {this.state.station_code}\n\t\t\t\t\t\t\t\terror = {this.state.error}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}